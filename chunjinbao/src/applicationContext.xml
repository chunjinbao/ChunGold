<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd 
						http://www.springframework.org/schema/aop
                      	http://www.springframework.org/schema/aop/spring-aop.xsd
                      	http://www.springframework.org/schema/context
    					http://www.springframework.org/schema/context/spring-context-4.0.xsd"
    xmlns:tx="http://www.springframework.org/schema/tx">
	
	<context:component-scan base-package="*"/>
	
	<bean id="dataSource"  
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">  
        <property name="driverClassName">  
            <value>com.mysql.jdbc.Driver</value>  
        </property>  
        <property name="url">  
            <value>jdbc:mysql://120.24.72.147:3306/chunjinbao</value>  
        </property>  
        <property name="username">  
            <value>chunjinbao</value>  
        </property>  
        <property name="password">  
            <value>12345</value>  
        </property>  
   
    </bean>  

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		
		<property name="dataSource" ref="dataSource">  
        </property>  
        
        <property name="hibernateProperties">  
            <props>  
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>  
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>
            </props>  
        </property>  
        
        <property name="packagesToScan" value="entity"/>
	</bean>
	
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED" rollback-for="Exception"/>
        </tx:attributes>  
    </tx:advice>
    
    <aop:config proxy-target-class="true">
        <aop:pointcut id="cut"
            expression="execution(* service.impl.*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="cut" />
    </aop:config>
	
	<bean id="userDao" class="dao.impl.UserDaoImpl">  
		<property name="sessionFactory" ref="sessionFactory" />
    </bean>  
    
    <bean id="productDao" class="dao.impl.ProductDaoImpl">  
		<property name="sessionFactory" ref="sessionFactory" />
    </bean>  
    
    <bean id="orderDao" class="dao.impl.OrderDaoImpl">  
		<property name="sessionFactory" ref="sessionFactory" />
    </bean>
    
    <bean id="userService" class="service.impl.UserServiceImpl">
    	<property name="userDao" ref="userDao" />
    </bean>  
    
    <bean id="productService" class="service.impl.ProductServiceImpl">
    	<property name="productDao" ref="productDao" />
    </bean> 
    
    <bean id="orderService" class="service.impl.OrderServiceImpl">
    	<property name="orderDao" ref="orderDao" />
    </bean> 
    
    <bean id="userAction" class="action.UserAction" scope="prototype">  
    </bean>
    
    <bean id="utilAction" class="action.UtilAction" scope="prototype">  
    </bean>
    
    <bean id="navAction" class="action.NavAction" scope="prototype">  
    </bean>
    
    <bean id="loginAction" class="action.LoginAction" scope="prototype">  
        <property name="userService" ref="userService"></property>  
    </bean>
    
    <bean id="priceAction" class="action.PriceAction" scope="prototype">
    </bean>
    
    <bean id="productAction" class="action.ProductAction" scope="prototype">  
        <property name="productService" ref="productService"></property>  
    </bean>
    
    <bean id="orderAction" class="action.OrderAction" scope="prototype">  
        <property name="orderService" ref="orderService"></property>  
    </bean>
</beans>
